#!/usr/bin/env bash

# Passing test/changed classes with it's path
# to get appropriate packages names
function get_packages() {

  files="$1"

  for file in ${files[@]}; do

    if [[ $file =~ \.java$ ]] || [[ $file =~ \.groovy$ ]] || [[ $file =~ \.kt$ ]]; then

        package=$(echo "$file" | sed -e 's/src\/main\/java\//\//g' \
                               | sed -e 's/src\/main\/kotlin\//\//g' \
                               | sed -e 's/src\/test\/groovy\//\//g' \
                               | sed -e 's/src\/test\/kotlin\//\//g' \
                               | sed -e 's/.\w*.java$/\//g' \
                               | sed -e 's/.\w*.kt$/\//g' \
                               | sed -e 's/.\w*.groovy$/\//g')

        local tests_files=($(git ls-tree --name-only -r HEAD src/test/kotlin$package src/test/groovy$package src/test/java$package))
        if [ ${#tests_files[@]} -ne 0 ]; then
           formatted_package=$(echo "$file" | sed -e 's/src\/main\/java\///g' \
                                            | sed -e 's/src\/main\/kotlin\///g' \
                                            | sed -e 's/src\/test\/groovy\///g' \
                                            | sed -e 's/src\/test\/kotlin\///g' \
                                            | sed -e 's/\//./g' \
                                            | sed -e 's/.\w*.java$/.*/g' \
                                            | sed -e 's/.\w*.kt$/.*/g' \
                                            | sed -e 's/.\w*.groovy$/.*/g')
          echo $formatted_package
        fi
    fi

  done
}

# Main function
function start_unit_tests() {

  # Getting files which have been changed in the last commit from current branch
  local changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD)

  local packages=($(get_packages "$changed_files"))

  if [ ${#packages[@]} -ne 0 ]; then
    # Forming a parameter string for "gradlew :test" command
    local tests_filter=$(for i in ${packages[@]}; do echo --tests "\"$i\""; done | sort -u)

    # Logging
    printf "Starting unit tests in the following list of packages:\n"
  	for i in "${tests_filter[@]}"; do echo  "${i//--tests /}"; done

  	# Running gradle test task with following filters
    ./gradlew :test $tests_filter
  fi
}

#Calling the main function
start_unit_tests